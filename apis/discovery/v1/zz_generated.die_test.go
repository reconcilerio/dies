//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021-2022 the original author or authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by diegen. DO NOT EDIT.

package v1

import (
	testing "reconciler.io/dies/testing"
	testingx "testing"
)

func TestEndpointSliceDie_MissingMethods(t *testingx.T) {
	die := EndpointSliceBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EndpointSliceDie: %s", diff.List())
	}
}

func TestEndpointDie_MissingMethods(t *testingx.T) {
	die := EndpointBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EndpointDie: %s", diff.List())
	}
}

func TestEndpointConditionsDie_MissingMethods(t *testingx.T) {
	die := EndpointConditionsBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EndpointConditionsDie: %s", diff.List())
	}
}

func TestEndpointHintsDie_MissingMethods(t *testingx.T) {
	die := EndpointHintsBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EndpointHintsDie: %s", diff.List())
	}
}

func TestForZoneDie_MissingMethods(t *testingx.T) {
	die := ForZoneBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ForZoneDie: %s", diff.List())
	}
}

func TestEndpointPortDie_MissingMethods(t *testingx.T) {
	die := EndpointPortBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EndpointPortDie: %s", diff.List())
	}
}
