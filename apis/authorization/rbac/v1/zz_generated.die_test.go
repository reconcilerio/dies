//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021-2022 the original author or authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by diegen. DO NOT EDIT.

package v1

import (
	testing "dies.dev/testing"
	testingx "testing"
)

func TestClusterRoleDie_MissingMethods(t *testingx.T) {
	die := ClusterRoleBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ClusterRoleDie: %s", diff.List())
	}
}

func TestAggregationRuleDie_MissingMethods(t *testingx.T) {
	die := AggregationRuleBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for AggregationRuleDie: %s", diff.List())
	}
}

func TestClusterRoleBindingDie_MissingMethods(t *testingx.T) {
	die := ClusterRoleBindingBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ClusterRoleBindingDie: %s", diff.List())
	}
}

func TestRoleDie_MissingMethods(t *testingx.T) {
	die := RoleBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for RoleDie: %s", diff.List())
	}
}

func TestPolicyRuleDie_MissingMethods(t *testingx.T) {
	die := PolicyRuleBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PolicyRuleDie: %s", diff.List())
	}
}

func TestRoleBindingDie_MissingMethods(t *testingx.T) {
	die := RoleBindingBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for RoleBindingDie: %s", diff.List())
	}
}

func TestSubjectDie_MissingMethods(t *testingx.T) {
	die := SubjectBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for SubjectDie: %s", diff.List())
	}
}

func TestRoleRefDie_MissingMethods(t *testingx.T) {
	die := RoleRefBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for RoleRefDie: %s", diff.List())
	}
}
